/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode mergeTrees(TreeNode root1, TreeNode root2) {
        if(root1 == null && root2 == null)return null;
        return bfs(root1, root2);
    }

    public TreeNode bfs(TreeNode r1, TreeNode r2){
      if(r1 == null && r2 == null)return null;
      if(r1 == null){
        TreeNode newNode = new TreeNode(r2.val);
        newNode.left = bfs(null, r2.left);
        newNode.right = bfs(null, r2.right);
        return newNode;
      }
      if(r2 == null){
        r1.left = bfs(r1.left, null);
        r1.right = bfs(r1.right, null);
        return r1;
      }

       r1.left = bfs(r1.left, r2.left);
       r1.right = bfs(r1.right, r2.right);

      r1.val = r1.val + r2.val;
      return r1;
    }

}
